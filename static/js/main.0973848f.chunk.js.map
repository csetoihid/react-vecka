{"version":3,"sources":["../../src/index.js","App.js","index.js"],"names":["ReactVecka","operation","date","weekYear","weekSection","margin","padding","border","fontSize","textAlign","background","float","color","weekTitle","lineHeight","height","fontWeight","weekDay","listStyle","width","Date","onejan","this","Math","myDate","style","findWeek","weekYearArr","weekNumber","n","parseInt","weekOut","getISOWeek","findDate","todaydate","oneJan","numberOfDays","res","thisWeek","simple","y","w","dow","ISOweekStart","temp","d","m","numDaysInMonth","Array","length","_","App","ReactDOM","render","document","getElementById"],"mappings":"wLACaA,EAAa,SAAC,GAAiD,QAA/CC,iBAA+C,MAAjD,KAAiD,MAA/BC,YAA+B,MAAjD,KAAiD,MAApBC,gBAAoB,MAAX,KAAW,EAGpEC,EAAc,CAClBC,OADkB,MAElBC,QAFkB,QAGlBC,OAHkB,oBAIlBC,SAJkB,MAKlBC,UALkB,SAMlBC,WANkB,UAOlBC,MAPkB,OAQlBC,MAAO,QAIHC,EAAY,CAChBL,SADgB,OAEhBM,WAFgB,OAGhBC,OAHgB,OAIhBH,MAJgB,OAKhBI,WALgB,IAMhBX,OAAQ,OAGJY,EAAU,CACdC,UADc,OAEdV,SAFc,OAGdM,WAHc,OAIdC,OAJc,OAKdI,MALc,MAMdR,MANc,OAOdC,MAAO,QAKT,UACE,eACE,OAiBJ,YACEQ,uBAAyB,WACvB,IAAIC,EAAS,IAAID,KAAKE,KAAT,gBAAb,GACA,OAAOC,YAAaD,KAAD,GAAD,MAA+BD,EAA/B,SAAD,GAAjB,IAEF,IAAIG,EAAS,IAAIJ,KAAjB,GACF,OAAO,yBAAKK,MAAOrB,GAAa,wBAAIqB,MAAOZ,GAAX,aAAzB,WAAuEW,EAA9E,WAvBWE,CAAP,GAEF,eACE,OAuBJ,YACE,IACMC,EADN,EACoBC,gBAA0BC,YAAC,OAAIC,SAAnD,MACMC,EAAUC,EAAU,WAAVA,cAAhB,IACA,OAAO,yBAAKP,MAAOrB,GAAa,wBAAIqB,MAAOZ,GAAX,QAAzB,OAAP,GA3BSoB,CAAP,GAEF,QACE,OAGJ,WACE,IAAIC,EAAY,IAAhB,KACIC,EAAU,IAAIf,KAAKc,EAAT,gBAAd,GACIE,EAAgBb,YAAYW,EAAD,UAC3BG,EAAMd,WAAYW,aAAF,GAApB,GACA,OAAO,yBAAKT,MAAOrB,GAAa,wBAAIqB,MAAOZ,GAApC,kBAAP,GARSyB,GA2BX,gBACE,IAAIC,EAAS,IAAInB,KAAKoB,EAAG,EAAG,EAA5B,GAAiCC,EAAD,IAC5BC,EAAMH,EAAV,SACII,EAAJ,EACID,GAAJ,EACIC,UAAqBJ,YAAmBA,EAAnBA,SADzB,GAGII,UAAqBJ,cAAuBA,EAA5CI,UACJ,IAAMC,EAAO,CACXC,EAAGF,EADQ,UAEXG,EAAGH,EAFQ,WAGXH,EAAGG,iBAECI,EAAiB,IAAI3B,KAAKwB,EAAT,EAAiBA,IAAjB,KAAvB,UAEA,OAAOI,MAAA,KAAW,CAACC,OAAQ,IAAIC,YAK7B,OAJIN,IAAJ,IACEA,OACAA,OAEK,wBAAInB,MAAOR,GAAU,IAAIG,KAAKwB,EAAT,EAAiBA,EAAjB,EAAyBA,EAAzB,KAA5B,oBCpFSO,EALH,WAEV,OAAO,kBAAC,EAAD,CAAYlD,UAAU,WAAWE,SAAS,cCCnDiD,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.0973848f.chunk.js","sourcesContent":["import React from 'react'\nexport const ReactVecka = ({ operation=null, date=null, weekYear=null }) => {\n\n\n  const weekSection = {\n    margin: \"2em\",\n    padding: \"0.5em\",\n    border: \"2px solid #1c7bb7\",\n    fontSize: \"2em\",\n    textAlign: \"center\",\n    background: \"#90c0de\",\n    float: \"left\",\n    color: \"#fff\"\n  };\n\n  \n  const weekTitle = {\n    fontSize: \"25px\",\n    lineHeight: \"40px\",\n    height: \"40px\",\n    color: \"#000\",\n    fontWeight: 400,\n    margin: \"5px\"\n  };\n\n  const weekDay = {\n    listStyle: \"none\",\n    fontSize: \"20px\",\n    lineHeight: \"40px\",\n    height: \"40px\",\n    width: \"30%\",\n    float: \"left\",\n    color: \"#fff\"\n  };\n\n\n\n  switch(operation) {\n    case \"findWeek\":\n      return findWeek(date)\n      break;\n    case \"findDate\":\n      return findDate(weekYear)\n      break;\n    default:\n      return thisWeek()\n  }\n\n  function thisWeek(){\n    let todaydate = new Date();     \n    let oneJan =  new Date(todaydate.getFullYear(), 0, 1); \n    let numberOfDays =  Math.floor((todaydate - oneJan) / (24 * 60 * 60 * 1000));  \n    let res = Math.ceil(( todaydate.getDay() + 1 + numberOfDays) / 7); \n    return <div style={weekSection}><h3 style={weekTitle}>This Week </h3> {res}</div>\n  }\n\n  function findWeek(date){\n    Date.prototype.getWeek = function () {\n      var onejan = new Date(this.getFullYear(), 0, 1);\n      return Math.ceil((((this - onejan) / 86400000) + onejan.getDay() + 1) / 7);\n    };\n    var myDate = new Date(date);\n  return <div style={weekSection}><h3 style={weekTitle}>Week of {date} is</h3> {myDate.getWeek()}</div>\n  }\n\n  function findDate(weekYear){\n    const weekNumber = weekYear;\n    const weekYearArr = weekNumber.split(\" \").map(n => parseInt(n))\n    const weekOut = getISOWeek(...weekYearArr) \n    return <div style={weekSection}><h3 style={weekTitle}>Week {weekYear}</h3> {weekOut}</div>\n  }\n\n  function getISOWeek(w, y) {\n    var simple = new Date(y, 0, 1 + (w - 1) * 7);\n    var dow = simple.getDay();\n    var ISOweekStart = simple;\n    if (dow <= 4)\n        ISOweekStart.setDate(simple.getDate() - simple.getDay() + 1);\n    else\n        ISOweekStart.setDate(simple.getDate() + 8 - simple.getDay());\n    const temp = {\n      d: ISOweekStart.getDate(),\n      m: ISOweekStart.getMonth(),\n      y: ISOweekStart.getFullYear(),\n    }\n    const numDaysInMonth = new Date(temp.y, temp.m + 1, 0).getDate()\n    \n    return Array.from({length: 7}, _ => {\n      if (temp.d > numDaysInMonth){\n        temp.m +=1;\n        temp.d = 1;\n      }      \n      return <li style={weekDay}>{new Date(temp.y, temp.m, temp.d++).toUTCString()}</li>\n    });\n  }\n\n\n}\n\n","import React from 'react'\nimport { ReactVecka } from 'react-vecka'\n\nconst App = () => {\n  //return <ReactVecka operation=\"findWeek\" date=\"2020-08-28\"/>\n  return <ReactVecka operation=\"findDate\" weekYear=\"20, 2020\"/>\n  //return <ReactVecka/>\n}\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}